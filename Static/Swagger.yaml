openapi: 3.0.0
info:
  title: Monday Football
  description: sean
  version: 1.0.0
servers:
- url: /
tags:
- name: Player
  description: API to player information
- name: Teams
  description: API to get Teams data
paths:
  /players:
    get:
      tags:
      - Player
      summary: Get all players
      description: ""
      operationId: get_all_players
      responses:
        "200":
          description: A JSON array of player names
          content:
            application/json:
              schema:
                uniqueItems: true
                type: array
                items:
                  $ref: '#/components/schemas/Player_lean'
                x-content-type: application/json
        "404":
          description: User not found
      x-openapi-router-controller: swagger_server.controllers.player_controller
  /player:
    post:
      tags:
      - Player
      summary: Add Player to DB
      operationId: add_player
      requestBody:
        description: Add player to the players DataBase
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Player'
        required: true
      responses:
        "201":
          description: Player Added to DB
        "400":
          description: Failed. Bad post data.
      x-openapi-router-controller: swagger_server.controllers.player_controller
  /player/{name}:
    get:
      tags:
      - Player
      summary: Get Player by name
      description: ""
      operationId: get_player_by_name
      parameters:
      - name: name
        in: path
        description: The name of the player
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: A User object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Player'
    delete:
      tags:
      - Player
      summary: Delete player's Data
      description: ""
      operationId: delete_player
      parameters:
      - name: name
        in: path
        description: The name of the player
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: user deleted from DB
        "400":
          description: User not found
      x-openapi-router-controller: swagger_server.controllers.player_controller
  /Teams:
    post:
      tags:
      - Teams
      summary: Get Teams
      description: Get teams for Monday Football
      operationId: get_teams
      parameters:
      - name: players
        in: body
        description: weekly players
        required: true
        style: simple
        explode: false
        schema:
          uniqueItems: true
          type: dict
          items:
            type: string
          x-content-type: application/json
      responses:
        "200":
          description: Teams created
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Team'
                x-content-type: application/json
        "503":
          description: Cannot create Teams
      x-openapi-router-controller: swagger_server.controllers.teams_controller
components:
  schemas:
    Player:
      type: object
      properties:
        name:
          type: string
        ranking:
          type: number
          format: float
        position:
          type: string
          enum:
          - Attack
          - Midfield
          - Defence
        isMember:
          type: boolean
        gradeThisWeek:
          type: number
          format: int
        goalkeeper:
          type: number
          format: int
      example:
        name: name
        ranking: 3.5
        position: Attack
        isMember: true
        gradeThisWeek: 6
        goalkeeper: 4
    Team:
      type: object
      properties:
        teamLevel:
          type: number
          format: float
        players:
          type: array
          items:
            type: object
      example:
        teamLevel: 21.26
        players:
        - {}
        - {}
    Player_lean:
      properties:
        name:
          type: string
        isMember:
          type: boolean
      example:
        name: name
        isMember: true