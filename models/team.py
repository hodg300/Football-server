# coding: utf-8

class Team:
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self):  # noqa: E501
        """Team - a model defined in Swagger

        :param team_level: The team_level of this Team.  # noqa: E501
        :type team_level: float
        :param players: The players of this Team.  # noqa: E501
        :type players: List[object]
        """
        self._team_level = 0
        self._players = []
        self._defence = False
        self._attack = False

    @property
    def team_level(self) -> float:
        """Gets the team_level of this Team.
        :return: The team_level of this Team.
        :rtype: float
        """
        return self._team_level

    @team_level.setter
    def team_level(self, team_level: float):
        """Sets the team_level of this Team.
        :param team_level: The team_level of this Team.
        :type team_level: float
        """

        self._team_level = team_level

    @property
    def players(self) -> list[object]:
        """Gets the players of this Team.
        :return: The players of this Team.
        :rtype: List[object]
        """

        return self._players

    @players.setter
    def players(self, players: list[object]):
        """Sets the players of this Team.
        :param players: The players of this Team.
        :type players: List[object]
        """

        self._players = players

    @property
    def defence(self) -> bool:
        """
        :return: if the team has defencing players
        :rtype: bool
        """

        return self._defence

    @defence.setter
    def defence(self, defence: bool):
        """
        :param defence: if the team has defencing players
        :type defence: bool
        """

        self._defence = defence

    @property
    def attack(self) -> bool:
        """
        :return: if the team has attacking players
        :rtype: bool
        """

        return self._attack

    @defence.setter
    def attack(self, attack: bool):
        """
        :param attack: if the team has attacking players
        :type attack: bool
        """

        self._attack = attack
